1. Rest란? : Representational State Transfer의 약자로, 하나의 URI가 고유한 리소스를 처리한느 공통 방식. 
            예를 들어 /board/112로 요청할 경우 게시글 중 112번째 글을 의미한다.
            
2. @RestController : 스프링 3버전에서는 @ResponseBody를 통해 Rest 방식의 처리를 했다. 하지만 4버전에서는 @RestController를 사용한다.
                     JSP같은 뷰를 반환하는 것이 아니고 JSON, XML 같은 데이터를 브라우저로 전송한다.
                     
3. @ResponseBody 및 @ResponseEntity 사용하기

4. Rest 방식으로 URI 표현하기
  -> 서버에 데이터를 조회하는 것뿐만 아니라 추가, 수정, 삭제 기능도 REST 방식으로 요청해야 한다. 이때 서버에 어떤 행위를 요청할 것인가는
    HTTP 메서드를 이용해 처리한다.
    
    *HTTP 메서드 : POST:추가 / GET:조회 / PUT:수정 / DELETE:삭제
    
  -> 다음은 각 작업을 REST방식으로 요청하는 전형적인 URI의 예다.
    
    /작업명/기본키 + 메서드 + 데이터
    
    1.작업명: 요청하는 작업 종류
    2.기본키: 요청하는 작업에 해당하는 대상의 기본키
    3.메서드: 요청하는 기능
    4.데이터: 기능 수행에 필요한 JSON 데이터
    
      POST   /boards + 데이터  
      GET    /boards/133
      PUT    /boards/133 + 데이터
      DELETE /boards/133
