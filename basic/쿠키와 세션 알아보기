1. 웹 페이지 연결 기능
    a. 세션 트래킹
        웹 페이지 사이의 상태나 정보를 공요하려면 '세션 트래킹'이라는 웹 페이지 연결 기능을 구현해야 합니다.
         
        웹 페이지를 연동하는 방법은 총 4가지가 있다
        ㄱ. <hidden>태그 
        ㄴ. URL Rewriting: Get 방식으로 url 뒤에 정보를 붙여서 다른 페이지로 전송
        ㄷ. 쿠키: 클라이언트 PC의 Cookie 파일에 정보를 저장한 후 웹 페이지들이 공유합니다.
            -> 웹 페이지들 사이의 공유 정보를 클라이언트 pc에 저장해 놓고 필요할 때 여러 웹 페이지들이 공유해서 사용할 수 있도록 매개 역활을 하는 방법
              보안이 취약해서 사용하지 않음
            -> Session 쿠키 : 브라우저 메모리에 생성, 브라우저 종료시 삭제, 사이트 접속 시 Session 인증 정보를 유지할 때
            
            Cookie c = new Cookie("cookieTest", URLEncoder.encode("JSP프로그래밍입니다.", "utf-8"));
            c.setMaxAge(-1);
            response.addCookie(c);
        ㄹ. 세션: 서버 메모리에 정보를 저장한 후 웹 페이지들이 공유.
            -> 세션은 서버에 메모리에 생성되어 정보를 저장한다. 즉, 보안이 뛰어나다.
            
            클라이언트의 브라우저가 서버에 최초 접속하면 서버의 서블릿은 세션 객체를 생성한 후 세션 객체에 대한 세션 id를 브라우저에 전송합니다. 
            그러면 브라우저는 이 세션 id를 브라우저가 사용하는 세션 쿠키에 저장합니다.
            
            1. 브라우저로 사이트에 접속
            2. 서버는 접속한 브라우저에 대한 세션 객체를 생성
            3. 세버는 생성된 세션 id를 클라이언트 브라우저에 응답합니다.
            4. 브라우저는 서버로부터 받은 세션 id를 브라우저가 사용하는 메모리의 세션 쿠키에 저장
            5. 브라우저가 재접속하면 브라우저는 Session 쿠키에 저장된 세션 id를 서버에 전달.
            6. 서버는 전송된 세션 id를 이용하여 해당 세션에 접근하여 작업을 수행
            
            -> 세션 API 이용하기
            HttpSession session = request.getSession(); // 최초 요청 시 세션 객체를 새로 생성하거나 기존 세션을 반환합니다.
            
            -> 세션을 이용한 로그인 정보 바인딩 실습
            로그인 상태처럼 사용자와 관련된 정보를 바인딩해서 사용할 때는 세션을 이용하는 것이 편리하다. 세션은 사용자당 한 개씩 생성되기 때문
            즉, HttpSession의 바인딩 기능을 사용한다.
            
            1. HttpSessino session = request.getSession(); // 세션 객체를 생성한다.
            2. String user_id = request.getParameter("user_id"); // 전송된 아이디를 가져온다.
            3. if(session.isNew()){
                 if(user_id != null){
                    session.setAttribute("user_id", user_id);
                 }
                 else {
                    session.invalidate();
                 }
               }
               else {
                    user_id = (String) session.getAttribute("user_id");
                    if(user_id != null)
                        out.print("안녕하세요");
               }
               
             -> 브라우저에서 쿠키 사용을 금지할경우
             세션 역시 클라이언트의 세션 쿠기를 이용해 각 브라우저에 대한 세션 기능을 사용하기 때문에 쿠키 사용을 금지당하면 세션 기능도 
             사용할 수 없다. 이럴 때는 encodeURL() 메서드를 이용하여 직접 서버에서 브라우저로 응답을 먼저 보낸 후 URL Rewriting 방법을
             이용해 jsessionID를 서버로 전송하여 세션 기능을 사용.
             
             String url = response.encodeURL("login");
             
                
               
